// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	account "github.com/bnb-chain/zkbas/service/apiserver/internal/handler/account"
	asset "github.com/bnb-chain/zkbas/service/apiserver/internal/handler/asset"
	block "github.com/bnb-chain/zkbas/service/apiserver/internal/handler/block"
	info "github.com/bnb-chain/zkbas/service/apiserver/internal/handler/info"
	nft "github.com/bnb-chain/zkbas/service/apiserver/internal/handler/nft"
	pair "github.com/bnb-chain/zkbas/service/apiserver/internal/handler/pair"
	root "github.com/bnb-chain/zkbas/service/apiserver/internal/handler/root"
	transaction "github.com/bnb-chain/zkbas/service/apiserver/internal/handler/transaction"
	"github.com/bnb-chain/zkbas/service/apiserver/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/",
				Handler: root.GetStatusHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/accounts",
				Handler: account.GetAccountsHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/account",
				Handler: account.GetAccountHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/assets",
				Handler: asset.GetAssetsHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/blocks",
				Handler: block.GetBlocksHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/block",
				Handler: block.GetBlockHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/currentHeight",
				Handler: block.GetCurrentHeightHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/layer2BasicInfo",
				Handler: info.GetLayer2BasicInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/currencyPrice",
				Handler: info.GetCurrencyPriceHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/currencyPrices",
				Handler: info.GetCurrencyPricesHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/gasFee",
				Handler: info.GetGasFeeHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/withdrawGasFee",
				Handler: info.GetWithdrawGasFeeHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/gasFeeAssets",
				Handler: info.GetGasFeeAssetsHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/gasAccount",
				Handler: info.GetGasAccountHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/search",
				Handler: info.SearchHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/swapAmount",
				Handler: pair.GetSwapAmountHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/pairs",
				Handler: pair.GetPairsHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/lpValue",
				Handler: pair.GetLpValueHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/pair",
				Handler: pair.GetPairHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/txs",
				Handler: transaction.GetTxsHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/blockTxs",
				Handler: transaction.GetBlockTxsHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/accountTxs",
				Handler: transaction.GetAccountTxsHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/tx",
				Handler: transaction.GetTxHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/mempoolTxs",
				Handler: transaction.GetMempoolTxsHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/accountMempoolTxs",
				Handler: transaction.GetAccountMempoolTxsHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/nextNonce",
				Handler: transaction.GetNextNonceHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/v1/sendTx",
				Handler: transaction.SendTxHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/maxOfferId",
				Handler: nft.GetMaxOfferIdHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/accountNfts",
				Handler: nft.GetAccountNftsHandler(serverCtx),
			},
		},
	)
}
