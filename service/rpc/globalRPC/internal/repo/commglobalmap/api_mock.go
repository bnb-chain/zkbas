// Code generated by MockGen. DO NOT EDIT.
// Source: api.go

// Package commglobalmap is a generated GoMock package.
package commglobalmap

import (
	context "context"
	reflect "reflect"

	commonAsset "github.com/bnb-chain/zkbas/common/commonAsset"
	globalmapHandler "github.com/bnb-chain/zkbas/common/util/globalmapHandler"
	gomock "github.com/golang/mock/gomock"
)

// MockCommglobalmap is a mock of Commglobalmap interface.
type MockCommglobalmap struct {
	ctrl     *gomock.Controller
	recorder *MockCommglobalmapMockRecorder
}

// MockCommglobalmapMockRecorder is the mock recorder for MockCommglobalmap.
type MockCommglobalmapMockRecorder struct {
	mock *MockCommglobalmap
}

// NewMockCommglobalmap creates a new mock instance.
func NewMockCommglobalmap(ctrl *gomock.Controller) *MockCommglobalmap {
	mock := &MockCommglobalmap{ctrl: ctrl}
	mock.recorder = &MockCommglobalmapMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCommglobalmap) EXPECT() *MockCommglobalmapMockRecorder {
	return m.recorder
}

// DeleteLatestAccountInfoInCache mocks base method.
func (m *MockCommglobalmap) DeleteLatestAccountInfoInCache(ctx context.Context, accountIndex int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteLatestAccountInfoInCache", ctx, accountIndex)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteLatestAccountInfoInCache indicates an expected call of DeleteLatestAccountInfoInCache.
func (mr *MockCommglobalmapMockRecorder) DeleteLatestAccountInfoInCache(ctx, accountIndex interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteLatestAccountInfoInCache", reflect.TypeOf((*MockCommglobalmap)(nil).DeleteLatestAccountInfoInCache), ctx, accountIndex)
}

// DeleteLatestLiquidityInfoForWriteInCache mocks base method.
func (m *MockCommglobalmap) DeleteLatestLiquidityInfoForWriteInCache(ctx context.Context, pairIndex int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteLatestLiquidityInfoForWriteInCache", ctx, pairIndex)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteLatestLiquidityInfoForWriteInCache indicates an expected call of DeleteLatestLiquidityInfoForWriteInCache.
func (mr *MockCommglobalmapMockRecorder) DeleteLatestLiquidityInfoForWriteInCache(ctx, pairIndex interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteLatestLiquidityInfoForWriteInCache", reflect.TypeOf((*MockCommglobalmap)(nil).DeleteLatestLiquidityInfoForWriteInCache), ctx, pairIndex)
}

// DeleteLatestNftInfoForReadInCache mocks base method.
func (m *MockCommglobalmap) DeleteLatestNftInfoForReadInCache(ctx context.Context, nftIndex int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteLatestNftInfoForReadInCache", ctx, nftIndex)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteLatestNftInfoForReadInCache indicates an expected call of DeleteLatestNftInfoForReadInCache.
func (mr *MockCommglobalmapMockRecorder) DeleteLatestNftInfoForReadInCache(ctx, nftIndex interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteLatestNftInfoForReadInCache", reflect.TypeOf((*MockCommglobalmap)(nil).DeleteLatestNftInfoForReadInCache), ctx, nftIndex)
}

// GetBasicAccountInfo mocks base method.
func (m *MockCommglobalmap) GetBasicAccountInfo(ctx context.Context, accountIndex int64) (*commonAsset.AccountInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBasicAccountInfo", ctx, accountIndex)
	ret0, _ := ret[0].(*commonAsset.AccountInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBasicAccountInfo indicates an expected call of GetBasicAccountInfo.
func (mr *MockCommglobalmapMockRecorder) GetBasicAccountInfo(ctx, accountIndex interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBasicAccountInfo", reflect.TypeOf((*MockCommglobalmap)(nil).GetBasicAccountInfo), ctx, accountIndex)
}

// GetBasicAccountInfoWithCache mocks base method.
func (m *MockCommglobalmap) GetBasicAccountInfoWithCache(ctx context.Context, accountIndex int64) (*commonAsset.AccountInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBasicAccountInfoWithCache", ctx, accountIndex)
	ret0, _ := ret[0].(*commonAsset.AccountInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBasicAccountInfoWithCache indicates an expected call of GetBasicAccountInfoWithCache.
func (mr *MockCommglobalmapMockRecorder) GetBasicAccountInfoWithCache(ctx, accountIndex interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBasicAccountInfoWithCache", reflect.TypeOf((*MockCommglobalmap)(nil).GetBasicAccountInfoWithCache), ctx, accountIndex)
}

// GetLatestAccountInfo mocks base method.
func (m *MockCommglobalmap) GetLatestAccountInfo(ctx context.Context, accountIndex int64) (*commonAsset.AccountInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatestAccountInfo", ctx, accountIndex)
	ret0, _ := ret[0].(*commonAsset.AccountInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatestAccountInfo indicates an expected call of GetLatestAccountInfo.
func (mr *MockCommglobalmapMockRecorder) GetLatestAccountInfo(ctx, accountIndex interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestAccountInfo", reflect.TypeOf((*MockCommglobalmap)(nil).GetLatestAccountInfo), ctx, accountIndex)
}

// GetLatestAccountInfoWithCache mocks base method.
func (m *MockCommglobalmap) GetLatestAccountInfoWithCache(ctx context.Context, accountIndex int64) (*commonAsset.AccountInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatestAccountInfoWithCache", ctx, accountIndex)
	ret0, _ := ret[0].(*commonAsset.AccountInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatestAccountInfoWithCache indicates an expected call of GetLatestAccountInfoWithCache.
func (mr *MockCommglobalmapMockRecorder) GetLatestAccountInfoWithCache(ctx, accountIndex interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestAccountInfoWithCache", reflect.TypeOf((*MockCommglobalmap)(nil).GetLatestAccountInfoWithCache), ctx, accountIndex)
}

// GetLatestLiquidityInfoForRead mocks base method.
func (m *MockCommglobalmap) GetLatestLiquidityInfoForRead(ctx context.Context, pairIndex int64) (*globalmapHandler.LiquidityInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatestLiquidityInfoForRead", ctx, pairIndex)
	ret0, _ := ret[0].(*globalmapHandler.LiquidityInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatestLiquidityInfoForRead indicates an expected call of GetLatestLiquidityInfoForRead.
func (mr *MockCommglobalmapMockRecorder) GetLatestLiquidityInfoForRead(ctx, pairIndex interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestLiquidityInfoForRead", reflect.TypeOf((*MockCommglobalmap)(nil).GetLatestLiquidityInfoForRead), ctx, pairIndex)
}

// GetLatestLiquidityInfoForReadWithCache mocks base method.
func (m *MockCommglobalmap) GetLatestLiquidityInfoForReadWithCache(ctx context.Context, pairIndex int64) (*globalmapHandler.LiquidityInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatestLiquidityInfoForReadWithCache", ctx, pairIndex)
	ret0, _ := ret[0].(*globalmapHandler.LiquidityInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatestLiquidityInfoForReadWithCache indicates an expected call of GetLatestLiquidityInfoForReadWithCache.
func (mr *MockCommglobalmapMockRecorder) GetLatestLiquidityInfoForReadWithCache(ctx, pairIndex interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestLiquidityInfoForReadWithCache", reflect.TypeOf((*MockCommglobalmap)(nil).GetLatestLiquidityInfoForReadWithCache), ctx, pairIndex)
}

// GetLatestLiquidityInfoForWrite mocks base method.
func (m *MockCommglobalmap) GetLatestLiquidityInfoForWrite(ctx context.Context, pairIndex int64) (*globalmapHandler.LiquidityInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatestLiquidityInfoForWrite", ctx, pairIndex)
	ret0, _ := ret[0].(*globalmapHandler.LiquidityInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatestLiquidityInfoForWrite indicates an expected call of GetLatestLiquidityInfoForWrite.
func (mr *MockCommglobalmapMockRecorder) GetLatestLiquidityInfoForWrite(ctx, pairIndex interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestLiquidityInfoForWrite", reflect.TypeOf((*MockCommglobalmap)(nil).GetLatestLiquidityInfoForWrite), ctx, pairIndex)
}

// GetLatestNftInfoForRead mocks base method.
func (m *MockCommglobalmap) GetLatestNftInfoForRead(ctx context.Context, nftIndex int64) (*commonAsset.NftInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatestNftInfoForRead", ctx, nftIndex)
	ret0, _ := ret[0].(*commonAsset.NftInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatestNftInfoForRead indicates an expected call of GetLatestNftInfoForRead.
func (mr *MockCommglobalmapMockRecorder) GetLatestNftInfoForRead(ctx, nftIndex interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestNftInfoForRead", reflect.TypeOf((*MockCommglobalmap)(nil).GetLatestNftInfoForRead), ctx, nftIndex)
}

// GetLatestNftInfoForReadWithCache mocks base method.
func (m *MockCommglobalmap) GetLatestNftInfoForReadWithCache(ctx context.Context, nftIndex int64) (*commonAsset.NftInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatestNftInfoForReadWithCache", ctx, nftIndex)
	ret0, _ := ret[0].(*commonAsset.NftInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatestNftInfoForReadWithCache indicates an expected call of GetLatestNftInfoForReadWithCache.
func (mr *MockCommglobalmapMockRecorder) GetLatestNftInfoForReadWithCache(ctx, nftIndex interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestNftInfoForReadWithCache", reflect.TypeOf((*MockCommglobalmap)(nil).GetLatestNftInfoForReadWithCache), ctx, nftIndex)
}

// GetLatestOfferIdForWrite mocks base method.
func (m *MockCommglobalmap) GetLatestOfferIdForWrite(ctx context.Context, accountIndex int64) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatestOfferIdForWrite", ctx, accountIndex)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatestOfferIdForWrite indicates an expected call of GetLatestOfferIdForWrite.
func (mr *MockCommglobalmapMockRecorder) GetLatestOfferIdForWrite(ctx, accountIndex interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestOfferIdForWrite", reflect.TypeOf((*MockCommglobalmap)(nil).GetLatestOfferIdForWrite), ctx, accountIndex)
}

// SetLatestAccountInfoInToCache mocks base method.
func (m *MockCommglobalmap) SetLatestAccountInfoInToCache(ctx context.Context, accountIndex int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetLatestAccountInfoInToCache", ctx, accountIndex)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetLatestAccountInfoInToCache indicates an expected call of SetLatestAccountInfoInToCache.
func (mr *MockCommglobalmapMockRecorder) SetLatestAccountInfoInToCache(ctx, accountIndex interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetLatestAccountInfoInToCache", reflect.TypeOf((*MockCommglobalmap)(nil).SetLatestAccountInfoInToCache), ctx, accountIndex)
}

// SetLatestLiquidityInfoForWrite mocks base method.
func (m *MockCommglobalmap) SetLatestLiquidityInfoForWrite(ctx context.Context, pairIndex int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetLatestLiquidityInfoForWrite", ctx, pairIndex)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetLatestLiquidityInfoForWrite indicates an expected call of SetLatestLiquidityInfoForWrite.
func (mr *MockCommglobalmapMockRecorder) SetLatestLiquidityInfoForWrite(ctx, pairIndex interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetLatestLiquidityInfoForWrite", reflect.TypeOf((*MockCommglobalmap)(nil).SetLatestLiquidityInfoForWrite), ctx, pairIndex)
}

// SetLatestNftInfoForReadInCache mocks base method.
func (m *MockCommglobalmap) SetLatestNftInfoForReadInCache(ctx context.Context, nftIndex int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetLatestNftInfoForReadInCache", ctx, nftIndex)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetLatestNftInfoForReadInCache indicates an expected call of SetLatestNftInfoForReadInCache.
func (mr *MockCommglobalmapMockRecorder) SetLatestNftInfoForReadInCache(ctx, nftIndex interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetLatestNftInfoForReadInCache", reflect.TypeOf((*MockCommglobalmap)(nil).SetLatestNftInfoForReadInCache), ctx, nftIndex)
}
