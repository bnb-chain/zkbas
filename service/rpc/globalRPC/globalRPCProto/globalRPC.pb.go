// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: globalRPC.proto

package globalRPCProto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//
//Proto Name: getLatestAccountLp
//Description: get latest account lp
type ReqGetLatestAccountLp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountIndex uint32 `protobuf:"varint,1,opt,name=AccountIndex,proto3" json:"AccountIndex,omitempty"`
	PairIndex    uint32 `protobuf:"varint,2,opt,name=PairIndex,proto3" json:"PairIndex,omitempty"`
}

func (x *ReqGetLatestAccountLp) Reset() {
	*x = ReqGetLatestAccountLp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetLatestAccountLp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetLatestAccountLp) ProtoMessage() {}

func (x *ReqGetLatestAccountLp) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetLatestAccountLp.ProtoReflect.Descriptor instead.
func (*ReqGetLatestAccountLp) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{0}
}

func (x *ReqGetLatestAccountLp) GetAccountIndex() uint32 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *ReqGetLatestAccountLp) GetPairIndex() uint32 {
	if x != nil {
		return x.PairIndex
	}
	return 0
}

type RespGetLatestAccountLp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LpAmount string `protobuf:"bytes,1,opt,name=LpAmount,proto3" json:"LpAmount,omitempty"`
}

func (x *RespGetLatestAccountLp) Reset() {
	*x = RespGetLatestAccountLp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetLatestAccountLp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetLatestAccountLp) ProtoMessage() {}

func (x *RespGetLatestAccountLp) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetLatestAccountLp.ProtoReflect.Descriptor instead.
func (*RespGetLatestAccountLp) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{1}
}

func (x *RespGetLatestAccountLp) GetLpAmount() string {
	if x != nil {
		return x.LpAmount
	}
	return ""
}

//
//Proto Name: GetLatestAssetsListByAccountIndex
//Description: get latest account assets info by accountIndex
type ReqGetLatestAssetsListByAccountIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountIndex uint32 `protobuf:"varint,1,opt,name=AccountIndex,proto3" json:"AccountIndex,omitempty"`
}

func (x *ReqGetLatestAssetsListByAccountIndex) Reset() {
	*x = ReqGetLatestAssetsListByAccountIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetLatestAssetsListByAccountIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetLatestAssetsListByAccountIndex) ProtoMessage() {}

func (x *ReqGetLatestAssetsListByAccountIndex) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetLatestAssetsListByAccountIndex.ProtoReflect.Descriptor instead.
func (*ReqGetLatestAssetsListByAccountIndex) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{2}
}

func (x *ReqGetLatestAssetsListByAccountIndex) GetAccountIndex() uint32 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

type AssetResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId uint32 `protobuf:"varint,1,opt,name=AssetId,proto3" json:"AssetId,omitempty"`
	Balance string `protobuf:"bytes,2,opt,name=Balance,proto3" json:"Balance,omitempty"`
}

func (x *AssetResult) Reset() {
	*x = AssetResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetResult) ProtoMessage() {}

func (x *AssetResult) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetResult.ProtoReflect.Descriptor instead.
func (*AssetResult) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{3}
}

func (x *AssetResult) GetAssetId() uint32 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

func (x *AssetResult) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

type RespGetLatestAssetsListByAccountIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResultAssetsList []*AssetResult `protobuf:"bytes,1,rep,name=ResultAssetsList,proto3" json:"ResultAssetsList,omitempty"`
}

func (x *RespGetLatestAssetsListByAccountIndex) Reset() {
	*x = RespGetLatestAssetsListByAccountIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetLatestAssetsListByAccountIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetLatestAssetsListByAccountIndex) ProtoMessage() {}

func (x *RespGetLatestAssetsListByAccountIndex) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetLatestAssetsListByAccountIndex.ProtoReflect.Descriptor instead.
func (*RespGetLatestAssetsListByAccountIndex) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{4}
}

func (x *RespGetLatestAssetsListByAccountIndex) GetResultAssetsList() []*AssetResult {
	if x != nil {
		return x.ResultAssetsList
	}
	return nil
}

//
//Proto Name: getLatestAssetInfoByAccountIndexAndAssetId
//Description: get latest account asset balance
type ReqGetLatestAssetInfoByAccountIndexAndAssetId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountIndex uint32 `protobuf:"varint,1,opt,name=AccountIndex,proto3" json:"AccountIndex,omitempty"`
	AssetId      uint32 `protobuf:"varint,2,opt,name=AssetId,proto3" json:"AssetId,omitempty"`
}

func (x *ReqGetLatestAssetInfoByAccountIndexAndAssetId) Reset() {
	*x = ReqGetLatestAssetInfoByAccountIndexAndAssetId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetLatestAssetInfoByAccountIndexAndAssetId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetLatestAssetInfoByAccountIndexAndAssetId) ProtoMessage() {}

func (x *ReqGetLatestAssetInfoByAccountIndexAndAssetId) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetLatestAssetInfoByAccountIndexAndAssetId.ProtoReflect.Descriptor instead.
func (*ReqGetLatestAssetInfoByAccountIndexAndAssetId) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{5}
}

func (x *ReqGetLatestAssetInfoByAccountIndexAndAssetId) GetAccountIndex() uint32 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *ReqGetLatestAssetInfoByAccountIndexAndAssetId) GetAssetId() uint32 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

type RespGetLatestAssetInfoByAccountIndexAndAssetId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance string `protobuf:"bytes,1,opt,name=Balance,proto3" json:"Balance,omitempty"`
}

func (x *RespGetLatestAssetInfoByAccountIndexAndAssetId) Reset() {
	*x = RespGetLatestAssetInfoByAccountIndexAndAssetId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetLatestAssetInfoByAccountIndexAndAssetId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetLatestAssetInfoByAccountIndexAndAssetId) ProtoMessage() {}

func (x *RespGetLatestAssetInfoByAccountIndexAndAssetId) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetLatestAssetInfoByAccountIndexAndAssetId.ProtoReflect.Descriptor instead.
func (*RespGetLatestAssetInfoByAccountIndexAndAssetId) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{6}
}

func (x *RespGetLatestAssetInfoByAccountIndexAndAssetId) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

//
//Proto Name: getLatestPairInfo
//Description: get latest pair asset info
type ReqGetLatestPairInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PairIndex uint32 `protobuf:"varint,1,opt,name=PairIndex,proto3" json:"PairIndex,omitempty"`
}

func (x *ReqGetLatestPairInfo) Reset() {
	*x = ReqGetLatestPairInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetLatestPairInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetLatestPairInfo) ProtoMessage() {}

func (x *ReqGetLatestPairInfo) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetLatestPairInfo.ProtoReflect.Descriptor instead.
func (*ReqGetLatestPairInfo) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{7}
}

func (x *ReqGetLatestPairInfo) GetPairIndex() uint32 {
	if x != nil {
		return x.PairIndex
	}
	return 0
}

type RespGetLatestPairInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// assetA Amount
	AssetAAmount string `protobuf:"bytes,1,opt,name=AssetAAmount,proto3" json:"AssetAAmount,omitempty"`
	// assetA Id
	AssetAId uint32 `protobuf:"varint,2,opt,name=AssetAId,proto3" json:"AssetAId,omitempty"`
	// assetB Amount
	AssetBAmount string `protobuf:"bytes,3,opt,name=AssetBAmount,proto3" json:"AssetBAmount,omitempty"`
	// assetA Id
	AssetBId uint32 `protobuf:"varint,4,opt,name=AssetBId,proto3" json:"AssetBId,omitempty"`
	// LP share Amount
	LpAmount string `protobuf:"bytes,5,opt,name=LpAmount,proto3" json:"LpAmount,omitempty"`
}

func (x *RespGetLatestPairInfo) Reset() {
	*x = RespGetLatestPairInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetLatestPairInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetLatestPairInfo) ProtoMessage() {}

func (x *RespGetLatestPairInfo) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetLatestPairInfo.ProtoReflect.Descriptor instead.
func (*RespGetLatestPairInfo) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{8}
}

func (x *RespGetLatestPairInfo) GetAssetAAmount() string {
	if x != nil {
		return x.AssetAAmount
	}
	return ""
}

func (x *RespGetLatestPairInfo) GetAssetAId() uint32 {
	if x != nil {
		return x.AssetAId
	}
	return 0
}

func (x *RespGetLatestPairInfo) GetAssetBAmount() string {
	if x != nil {
		return x.AssetBAmount
	}
	return ""
}

func (x *RespGetLatestPairInfo) GetAssetBId() uint32 {
	if x != nil {
		return x.AssetBId
	}
	return 0
}

func (x *RespGetLatestPairInfo) GetLpAmount() string {
	if x != nil {
		return x.LpAmount
	}
	return ""
}

//
//Proto Name: GetSwapAmount
//Description: get swap amount
type ReqGetSwapAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PairIndex   uint32 `protobuf:"varint,1,opt,name=PairIndex,proto3" json:"PairIndex,omitempty"`
	AssetId     uint32 `protobuf:"varint,2,opt,name=AssetId,proto3" json:"AssetId,omitempty"`
	AssetAmount string `protobuf:"bytes,3,opt,name=AssetAmount,proto3" json:"AssetAmount,omitempty"`
	IsFrom      bool   `protobuf:"varint,4,opt,name=IsFrom,proto3" json:"IsFrom,omitempty"`
}

func (x *ReqGetSwapAmount) Reset() {
	*x = ReqGetSwapAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetSwapAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetSwapAmount) ProtoMessage() {}

func (x *ReqGetSwapAmount) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetSwapAmount.ProtoReflect.Descriptor instead.
func (*ReqGetSwapAmount) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{9}
}

func (x *ReqGetSwapAmount) GetPairIndex() uint32 {
	if x != nil {
		return x.PairIndex
	}
	return 0
}

func (x *ReqGetSwapAmount) GetAssetId() uint32 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

func (x *ReqGetSwapAmount) GetAssetAmount() string {
	if x != nil {
		return x.AssetAmount
	}
	return ""
}

func (x *ReqGetSwapAmount) GetIsFrom() bool {
	if x != nil {
		return x.IsFrom
	}
	return false
}

type RespGetSwapAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SwapAssetAmount string `protobuf:"bytes,1,opt,name=SwapAssetAmount,proto3" json:"SwapAssetAmount,omitempty"`
	SwapAssetId     uint32 `protobuf:"varint,2,opt,name=SwapAssetId,proto3" json:"SwapAssetId,omitempty"`
}

func (x *RespGetSwapAmount) Reset() {
	*x = RespGetSwapAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetSwapAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetSwapAmount) ProtoMessage() {}

func (x *RespGetSwapAmount) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetSwapAmount.ProtoReflect.Descriptor instead.
func (*RespGetSwapAmount) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{10}
}

func (x *RespGetSwapAmount) GetSwapAssetAmount() string {
	if x != nil {
		return x.SwapAssetAmount
	}
	return ""
}

func (x *RespGetSwapAmount) GetSwapAssetId() uint32 {
	if x != nil {
		return x.SwapAssetId
	}
	return 0
}

//
//Proto Name: GetLpValue
//Description: preview lp value
type ReqGetLpValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PairIndex uint32 `protobuf:"varint,1,opt,name=PairIndex,proto3" json:"PairIndex,omitempty"`
	LPAmount  string `protobuf:"bytes,2,opt,name=LPAmount,proto3" json:"LPAmount,omitempty"`
}

func (x *ReqGetLpValue) Reset() {
	*x = ReqGetLpValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetLpValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetLpValue) ProtoMessage() {}

func (x *ReqGetLpValue) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetLpValue.ProtoReflect.Descriptor instead.
func (*ReqGetLpValue) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{11}
}

func (x *ReqGetLpValue) GetPairIndex() uint32 {
	if x != nil {
		return x.PairIndex
	}
	return 0
}

func (x *ReqGetLpValue) GetLPAmount() string {
	if x != nil {
		return x.LPAmount
	}
	return ""
}

type RespGetLpValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetAId     uint32 `protobuf:"varint,1,opt,name=AssetAId,proto3" json:"AssetAId,omitempty"`
	AssetAAmount string `protobuf:"bytes,2,opt,name=AssetAAmount,proto3" json:"AssetAAmount,omitempty"`
	AssetBId     uint32 `protobuf:"varint,3,opt,name=AssetBId,proto3" json:"AssetBId,omitempty"`
	AssetBAmount string `protobuf:"bytes,4,opt,name=AssetBAmount,proto3" json:"AssetBAmount,omitempty"`
}

func (x *RespGetLpValue) Reset() {
	*x = RespGetLpValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetLpValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetLpValue) ProtoMessage() {}

func (x *RespGetLpValue) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetLpValue.ProtoReflect.Descriptor instead.
func (*RespGetLpValue) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{12}
}

func (x *RespGetLpValue) GetAssetAId() uint32 {
	if x != nil {
		return x.AssetAId
	}
	return 0
}

func (x *RespGetLpValue) GetAssetAAmount() string {
	if x != nil {
		return x.AssetAAmount
	}
	return ""
}

func (x *RespGetLpValue) GetAssetBId() uint32 {
	if x != nil {
		return x.AssetBId
	}
	return 0
}

func (x *RespGetLpValue) GetAssetBAmount() string {
	if x != nil {
		return x.AssetBAmount
	}
	return ""
}

type TxDetailInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId      uint32 `protobuf:"varint,1,opt,name=AssetId,proto3" json:"AssetId,omitempty"`
	AssetType    uint32 `protobuf:"varint,2,opt,name=AssetType,proto3" json:"AssetType,omitempty"`
	AccountIndex uint32 `protobuf:"varint,3,opt,name=AccountIndex,proto3" json:"AccountIndex,omitempty"`
	AccountName  string `protobuf:"bytes,4,opt,name=AccountName,proto3" json:"AccountName,omitempty"`
	BalanceDelta string `protobuf:"bytes,5,opt,name=BalanceDelta,proto3" json:"BalanceDelta,omitempty"`
}

func (x *TxDetailInfo) Reset() {
	*x = TxDetailInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxDetailInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxDetailInfo) ProtoMessage() {}

func (x *TxDetailInfo) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxDetailInfo.ProtoReflect.Descriptor instead.
func (*TxDetailInfo) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{13}
}

func (x *TxDetailInfo) GetAssetId() uint32 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

func (x *TxDetailInfo) GetAssetType() uint32 {
	if x != nil {
		return x.AssetType
	}
	return 0
}

func (x *TxDetailInfo) GetAccountIndex() uint32 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *TxDetailInfo) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *TxDetailInfo) GetBalanceDelta() string {
	if x != nil {
		return x.BalanceDelta
	}
	return ""
}

type TxInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHash        string          `protobuf:"bytes,1,opt,name=TxHash,proto3" json:"TxHash,omitempty"`
	TxType        uint32          `protobuf:"varint,2,opt,name=TxType,proto3" json:"TxType,omitempty"`
	GasFeeAssetId uint32          `protobuf:"varint,3,opt,name=GasFeeAssetId,proto3" json:"GasFeeAssetId,omitempty"`
	GasFee        string          `protobuf:"bytes,4,opt,name=GasFee,proto3" json:"GasFee,omitempty"`
	NftIndex      uint32          `protobuf:"varint,5,opt,name=NftIndex,proto3" json:"NftIndex,omitempty"`
	PairIndex     uint32          `protobuf:"varint,6,opt,name=PairIndex,proto3" json:"PairIndex,omitempty"`
	AssetId       uint32          `protobuf:"varint,7,opt,name=AssetId,proto3" json:"AssetId,omitempty"`
	TxAmount      string          `protobuf:"bytes,8,opt,name=TxAmount,proto3" json:"TxAmount,omitempty"`
	NativeAddress string          `protobuf:"bytes,9,opt,name=NativeAddress,proto3" json:"NativeAddress,omitempty"`
	TxDetails     []*TxDetailInfo `protobuf:"bytes,10,rep,name=TxDetails,proto3" json:"TxDetails,omitempty"`
	Memo          string          `protobuf:"bytes,11,opt,name=Memo,proto3" json:"Memo,omitempty"`
	AccountIndex  uint32          `protobuf:"varint,12,opt,name=AccountIndex,proto3" json:"AccountIndex,omitempty"`
	Nonce         uint64          `protobuf:"varint,13,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	CreateAt      uint64          `protobuf:"varint,14,opt,name=CreateAt,proto3" json:"CreateAt,omitempty"`
	Status        uint32          `protobuf:"varint,15,opt,name=Status,proto3" json:"Status,omitempty"`
	BlockHeight   uint64          `protobuf:"varint,16,opt,name=BlockHeight,proto3" json:"BlockHeight,omitempty"`
}

func (x *TxInfo) Reset() {
	*x = TxInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxInfo) ProtoMessage() {}

func (x *TxInfo) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxInfo.ProtoReflect.Descriptor instead.
func (*TxInfo) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{14}
}

func (x *TxInfo) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *TxInfo) GetTxType() uint32 {
	if x != nil {
		return x.TxType
	}
	return 0
}

func (x *TxInfo) GetGasFeeAssetId() uint32 {
	if x != nil {
		return x.GasFeeAssetId
	}
	return 0
}

func (x *TxInfo) GetGasFee() string {
	if x != nil {
		return x.GasFee
	}
	return ""
}

func (x *TxInfo) GetNftIndex() uint32 {
	if x != nil {
		return x.NftIndex
	}
	return 0
}

func (x *TxInfo) GetPairIndex() uint32 {
	if x != nil {
		return x.PairIndex
	}
	return 0
}

func (x *TxInfo) GetAssetId() uint32 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

func (x *TxInfo) GetTxAmount() string {
	if x != nil {
		return x.TxAmount
	}
	return ""
}

func (x *TxInfo) GetNativeAddress() string {
	if x != nil {
		return x.NativeAddress
	}
	return ""
}

func (x *TxInfo) GetTxDetails() []*TxDetailInfo {
	if x != nil {
		return x.TxDetails
	}
	return nil
}

func (x *TxInfo) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *TxInfo) GetAccountIndex() uint32 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *TxInfo) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *TxInfo) GetCreateAt() uint64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *TxInfo) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TxInfo) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type ReqGetLatestTxsListByAccountIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountIndex uint32 `protobuf:"varint,1,opt,name=AccountIndex,proto3" json:"AccountIndex,omitempty"`
	Limit        uint32 `protobuf:"varint,2,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Offset       uint32 `protobuf:"varint,3,opt,name=Offset,proto3" json:"Offset,omitempty"`
}

func (x *ReqGetLatestTxsListByAccountIndex) Reset() {
	*x = ReqGetLatestTxsListByAccountIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetLatestTxsListByAccountIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetLatestTxsListByAccountIndex) ProtoMessage() {}

func (x *ReqGetLatestTxsListByAccountIndex) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetLatestTxsListByAccountIndex.ProtoReflect.Descriptor instead.
func (*ReqGetLatestTxsListByAccountIndex) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{15}
}

func (x *ReqGetLatestTxsListByAccountIndex) GetAccountIndex() uint32 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *ReqGetLatestTxsListByAccountIndex) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ReqGetLatestTxsListByAccountIndex) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type RespGetLatestTxsListByAccountIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total   uint32    `protobuf:"varint,1,opt,name=Total,proto3" json:"Total,omitempty"`
	TxsList []*TxInfo `protobuf:"bytes,2,rep,name=TxsList,proto3" json:"TxsList,omitempty"`
}

func (x *RespGetLatestTxsListByAccountIndex) Reset() {
	*x = RespGetLatestTxsListByAccountIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetLatestTxsListByAccountIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetLatestTxsListByAccountIndex) ProtoMessage() {}

func (x *RespGetLatestTxsListByAccountIndex) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetLatestTxsListByAccountIndex.ProtoReflect.Descriptor instead.
func (*RespGetLatestTxsListByAccountIndex) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{16}
}

func (x *RespGetLatestTxsListByAccountIndex) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RespGetLatestTxsListByAccountIndex) GetTxsList() []*TxInfo {
	if x != nil {
		return x.TxsList
	}
	return nil
}

type ReqGetLatestTxsListByAccountIndexAndTxType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountIndex uint32 `protobuf:"varint,1,opt,name=AccountIndex,proto3" json:"AccountIndex,omitempty"`
	TxType       uint32 `protobuf:"varint,2,opt,name=TxType,proto3" json:"TxType,omitempty"`
	Limit        uint32 `protobuf:"varint,3,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Offset       uint32 `protobuf:"varint,4,opt,name=Offset,proto3" json:"Offset,omitempty"`
}

func (x *ReqGetLatestTxsListByAccountIndexAndTxType) Reset() {
	*x = ReqGetLatestTxsListByAccountIndexAndTxType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetLatestTxsListByAccountIndexAndTxType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetLatestTxsListByAccountIndexAndTxType) ProtoMessage() {}

func (x *ReqGetLatestTxsListByAccountIndexAndTxType) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetLatestTxsListByAccountIndexAndTxType.ProtoReflect.Descriptor instead.
func (*ReqGetLatestTxsListByAccountIndexAndTxType) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{17}
}

func (x *ReqGetLatestTxsListByAccountIndexAndTxType) GetAccountIndex() uint32 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *ReqGetLatestTxsListByAccountIndexAndTxType) GetTxType() uint32 {
	if x != nil {
		return x.TxType
	}
	return 0
}

func (x *ReqGetLatestTxsListByAccountIndexAndTxType) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ReqGetLatestTxsListByAccountIndexAndTxType) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type RespGetLatestTxsListByAccountIndexAndTxType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total   uint32    `protobuf:"varint,1,opt,name=Total,proto3" json:"Total,omitempty"`
	TxsList []*TxInfo `protobuf:"bytes,2,rep,name=TxsList,proto3" json:"TxsList,omitempty"`
}

func (x *RespGetLatestTxsListByAccountIndexAndTxType) Reset() {
	*x = RespGetLatestTxsListByAccountIndexAndTxType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetLatestTxsListByAccountIndexAndTxType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetLatestTxsListByAccountIndexAndTxType) ProtoMessage() {}

func (x *RespGetLatestTxsListByAccountIndexAndTxType) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetLatestTxsListByAccountIndexAndTxType.ProtoReflect.Descriptor instead.
func (*RespGetLatestTxsListByAccountIndexAndTxType) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{18}
}

func (x *RespGetLatestTxsListByAccountIndexAndTxType) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RespGetLatestTxsListByAccountIndexAndTxType) GetTxsList() []*TxInfo {
	if x != nil {
		return x.TxsList
	}
	return nil
}

//
//Proto Name: sendTx
//Description: sendTransaction
type ReqSendTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxType uint32 `protobuf:"varint,1,opt,name=TxType,proto3" json:"TxType,omitempty"`
	TxInfo string `protobuf:"bytes,2,opt,name=TxInfo,proto3" json:"TxInfo,omitempty"`
}

func (x *ReqSendTx) Reset() {
	*x = ReqSendTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSendTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSendTx) ProtoMessage() {}

func (x *ReqSendTx) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSendTx.ProtoReflect.Descriptor instead.
func (*ReqSendTx) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{19}
}

func (x *ReqSendTx) GetTxType() uint32 {
	if x != nil {
		return x.TxType
	}
	return 0
}

func (x *ReqSendTx) GetTxInfo() string {
	if x != nil {
		return x.TxInfo
	}
	return ""
}

type RespSendTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxId string `protobuf:"bytes,1,opt,name=TxId,proto3" json:"TxId,omitempty"`
}

func (x *RespSendTx) Reset() {
	*x = RespSendTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespSendTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespSendTx) ProtoMessage() {}

func (x *RespSendTx) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespSendTx.ProtoReflect.Descriptor instead.
func (*RespSendTx) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{20}
}

func (x *RespSendTx) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

type ReqGetTransactionCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountIndex uint32 `protobuf:"varint,1,opt,name=AccountIndex,proto3" json:"AccountIndex,omitempty"`
}

func (x *ReqGetTransactionCount) Reset() {
	*x = ReqGetTransactionCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetTransactionCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetTransactionCount) ProtoMessage() {}

func (x *ReqGetTransactionCount) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetTransactionCount.ProtoReflect.Descriptor instead.
func (*ReqGetTransactionCount) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{21}
}

func (x *ReqGetTransactionCount) GetAccountIndex() uint32 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

type RespGetTransactionCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint64 `protobuf:"varint,1,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
}

func (x *RespGetTransactionCount) Reset() {
	*x = RespGetTransactionCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetTransactionCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetTransactionCount) ProtoMessage() {}

func (x *RespGetTransactionCount) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetTransactionCount.ProtoReflect.Descriptor instead.
func (*RespGetTransactionCount) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{22}
}

func (x *RespGetTransactionCount) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

type ReqGetMaxOfferId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountIndex uint32 `protobuf:"varint,1,opt,name=AccountIndex,proto3" json:"AccountIndex,omitempty"`
}

func (x *ReqGetMaxOfferId) Reset() {
	*x = ReqGetMaxOfferId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetMaxOfferId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetMaxOfferId) ProtoMessage() {}

func (x *ReqGetMaxOfferId) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetMaxOfferId.ProtoReflect.Descriptor instead.
func (*ReqGetMaxOfferId) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{23}
}

func (x *ReqGetMaxOfferId) GetAccountIndex() uint32 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

type RespGetMaxOfferId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OfferId uint64 `protobuf:"varint,1,opt,name=OfferId,proto3" json:"OfferId,omitempty"`
}

func (x *RespGetMaxOfferId) Reset() {
	*x = RespGetMaxOfferId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetMaxOfferId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetMaxOfferId) ProtoMessage() {}

func (x *RespGetMaxOfferId) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetMaxOfferId.ProtoReflect.Descriptor instead.
func (*RespGetMaxOfferId) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{24}
}

func (x *RespGetMaxOfferId) GetOfferId() uint64 {
	if x != nil {
		return x.OfferId
	}
	return 0
}

var File_globalRPC_proto protoreflect.FileDescriptor

var file_globalRPC_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x59, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c,
	0x0a, 0x09, 0x50, 0x61, 0x69, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x50, 0x61, 0x69, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x34, 0x0a, 0x16,
	0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x70, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x70, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x4a, 0x0a, 0x24, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x41,
	0x0a, 0x0b, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x22, 0x70, 0x0a, 0x25, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x47, 0x0a, 0x10, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x10, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x6d, 0x0a, 0x2d, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x41, 0x6e, 0x64, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x64, 0x22, 0x4a, 0x0a, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x41, 0x6e, 0x64, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x34,
	0x0a, 0x14, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x50, 0x61,
	0x69, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x69, 0x72, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x50, 0x61, 0x69, 0x72, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x22, 0xb3, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22,
	0x0a, 0x0c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x4c, 0x70, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x4c, 0x70, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x10, 0x52,
	0x65, 0x71, 0x47, 0x65, 0x74, 0x53, 0x77, 0x61, 0x70, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x50, 0x61, 0x69, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x50, 0x61, 0x69, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x0a,
	0x07, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x46,
	0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x46, 0x72, 0x6f,
	0x6d, 0x22, 0x5f, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x53, 0x77, 0x61, 0x70,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x53, 0x77, 0x61, 0x70, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x53, 0x77, 0x61, 0x70, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x53, 0x77, 0x61, 0x70, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x53, 0x77, 0x61, 0x70, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x64, 0x22, 0x49, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4c, 0x70, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x69, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x50, 0x61, 0x69, 0x72, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x50, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x50, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x90, 0x01,
	0x0a, 0x0e, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4c, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0xb0, 0x01, 0x0a, 0x0c, 0x54, 0x78, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x20, 0x0a,
	0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65,
	0x6c, 0x74, 0x61, 0x22, 0xec, 0x03, 0x0a, 0x06, 0x54, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16,
	0x0a, 0x06, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x78, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x54, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x47, 0x61, 0x73, 0x46, 0x65, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x47, 0x61, 0x73, 0x46, 0x65, 0x65, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x73, 0x46, 0x65, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x61, 0x73, 0x46, 0x65, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x4e, 0x66, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x4e, 0x66, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x69, 0x72,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x50, 0x61, 0x69,
	0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x54, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x54, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d,
	0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x3a, 0x0a, 0x09, 0x54, 0x78, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50,
	0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x78, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x54, 0x78, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x4d, 0x65, 0x6d, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4d, 0x65,
	0x6d, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x22, 0x75, 0x0a, 0x21, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x54, 0x78, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x6c, 0x0a, 0x22, 0x52, 0x65, 0x73,
	0x70, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x78, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x07, 0x54, 0x78, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52,
	0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x54, 0x78, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x96, 0x01, 0x0a, 0x2a, 0x52, 0x65, 0x71, 0x47,
	0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x78, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x41, 0x6e, 0x64,
	0x54, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x78,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x54, 0x78, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x22, 0x75, 0x0a, 0x2b, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x54, 0x78, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x41, 0x6e, 0x64, 0x54, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x07, 0x54, 0x78, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52,
	0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x54, 0x78, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x3b, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x53, 0x65,
	0x6e, 0x64, 0x54, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x78, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x54, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x54, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x78,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x20, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x70, 0x53, 0x65, 0x6e, 0x64,
	0x54, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x78, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x54, 0x78, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x22, 0x2f, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x36, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x78, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x2d, 0x0a,
	0x11, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x4f, 0x66, 0x66, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x32, 0xe4, 0x09, 0x0a,
	0x09, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x12, 0x63, 0x0a, 0x12, 0x67, 0x65,
	0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x70,
	0x12, 0x25, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x70, 0x1a, 0x26, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x70, 0x12,
	0x90, 0x01, 0x0a, 0x21, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x34, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50,
	0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0x35, 0x2e, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0xab, 0x01, 0x0a, 0x2a, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x41, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x3d, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x41, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x1a, 0x3e, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x41, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x60, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x50, 0x61, 0x69,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50,
	0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x25, 0x2e, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x50, 0x61, 0x69, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x54, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x53, 0x77, 0x61, 0x70, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x53, 0x77, 0x61, 0x70, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x21, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50,
	0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x53, 0x77,
	0x61, 0x70, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4b, 0x0a, 0x0a, 0x67, 0x65, 0x74, 0x4c,
	0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52,
	0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4c, 0x70,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x1e, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50,
	0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4c, 0x70,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x1e, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x54, 0x78, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x31, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x78, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0x32, 0x2e, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x78, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0xa2, 0x01, 0x0a, 0x27, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x78, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x41, 0x6e, 0x64, 0x54, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x2e, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x78, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x41, 0x6e,
	0x64, 0x54, 0x78, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x3b, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x78, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x41, 0x6e, 0x64, 0x54, 0x78,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x78, 0x12, 0x19,
	0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x71, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x78, 0x1a, 0x1a, 0x2e, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x53,
	0x65, 0x6e, 0x64, 0x54, 0x78, 0x12, 0x66, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x2e, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x71, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x27, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x54, 0x0a,
	0x0d, 0x67, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20,
	0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64,
	0x1a, 0x21, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x49, 0x64, 0x42, 0x12, 0x5a, 0x10, 0x2e, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52,
	0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_globalRPC_proto_rawDescOnce sync.Once
	file_globalRPC_proto_rawDescData = file_globalRPC_proto_rawDesc
)

func file_globalRPC_proto_rawDescGZIP() []byte {
	file_globalRPC_proto_rawDescOnce.Do(func() {
		file_globalRPC_proto_rawDescData = protoimpl.X.CompressGZIP(file_globalRPC_proto_rawDescData)
	})
	return file_globalRPC_proto_rawDescData
}

var file_globalRPC_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_globalRPC_proto_goTypes = []interface{}{
	(*ReqGetLatestAccountLp)(nil),                          // 0: globalRPCProto.ReqGetLatestAccountLp
	(*RespGetLatestAccountLp)(nil),                         // 1: globalRPCProto.RespGetLatestAccountLp
	(*ReqGetLatestAssetsListByAccountIndex)(nil),           // 2: globalRPCProto.ReqGetLatestAssetsListByAccountIndex
	(*AssetResult)(nil),                                    // 3: globalRPCProto.AssetResult
	(*RespGetLatestAssetsListByAccountIndex)(nil),          // 4: globalRPCProto.RespGetLatestAssetsListByAccountIndex
	(*ReqGetLatestAssetInfoByAccountIndexAndAssetId)(nil),  // 5: globalRPCProto.ReqGetLatestAssetInfoByAccountIndexAndAssetId
	(*RespGetLatestAssetInfoByAccountIndexAndAssetId)(nil), // 6: globalRPCProto.RespGetLatestAssetInfoByAccountIndexAndAssetId
	(*ReqGetLatestPairInfo)(nil),                           // 7: globalRPCProto.ReqGetLatestPairInfo
	(*RespGetLatestPairInfo)(nil),                          // 8: globalRPCProto.RespGetLatestPairInfo
	(*ReqGetSwapAmount)(nil),                               // 9: globalRPCProto.ReqGetSwapAmount
	(*RespGetSwapAmount)(nil),                              // 10: globalRPCProto.RespGetSwapAmount
	(*ReqGetLpValue)(nil),                                  // 11: globalRPCProto.ReqGetLpValue
	(*RespGetLpValue)(nil),                                 // 12: globalRPCProto.RespGetLpValue
	(*TxDetailInfo)(nil),                                   // 13: globalRPCProto.TxDetailInfo
	(*TxInfo)(nil),                                         // 14: globalRPCProto.TxInfo
	(*ReqGetLatestTxsListByAccountIndex)(nil),              // 15: globalRPCProto.ReqGetLatestTxsListByAccountIndex
	(*RespGetLatestTxsListByAccountIndex)(nil),             // 16: globalRPCProto.RespGetLatestTxsListByAccountIndex
	(*ReqGetLatestTxsListByAccountIndexAndTxType)(nil),     // 17: globalRPCProto.ReqGetLatestTxsListByAccountIndexAndTxType
	(*RespGetLatestTxsListByAccountIndexAndTxType)(nil),    // 18: globalRPCProto.RespGetLatestTxsListByAccountIndexAndTxType
	(*ReqSendTx)(nil),                                      // 19: globalRPCProto.ReqSendTx
	(*RespSendTx)(nil),                                     // 20: globalRPCProto.RespSendTx
	(*ReqGetTransactionCount)(nil),                         // 21: globalRPCProto.ReqGetTransactionCount
	(*RespGetTransactionCount)(nil),                        // 22: globalRPCProto.RespGetTransactionCount
	(*ReqGetMaxOfferId)(nil),                               // 23: globalRPCProto.ReqGetMaxOfferId
	(*RespGetMaxOfferId)(nil),                              // 24: globalRPCProto.RespGetMaxOfferId
}
var file_globalRPC_proto_depIdxs = []int32{
	3,  // 0: globalRPCProto.RespGetLatestAssetsListByAccountIndex.ResultAssetsList:type_name -> globalRPCProto.AssetResult
	13, // 1: globalRPCProto.TxInfo.TxDetails:type_name -> globalRPCProto.TxDetailInfo
	14, // 2: globalRPCProto.RespGetLatestTxsListByAccountIndex.TxsList:type_name -> globalRPCProto.TxInfo
	14, // 3: globalRPCProto.RespGetLatestTxsListByAccountIndexAndTxType.TxsList:type_name -> globalRPCProto.TxInfo
	0,  // 4: globalRPCProto.globalRPC.getLatestAccountLp:input_type -> globalRPCProto.ReqGetLatestAccountLp
	2,  // 5: globalRPCProto.globalRPC.getLatestAssetsListByAccountIndex:input_type -> globalRPCProto.ReqGetLatestAssetsListByAccountIndex
	5,  // 6: globalRPCProto.globalRPC.getLatestAssetInfoByAccountIndexAndAssetId:input_type -> globalRPCProto.ReqGetLatestAssetInfoByAccountIndexAndAssetId
	7,  // 7: globalRPCProto.globalRPC.getLatestPairInfo:input_type -> globalRPCProto.ReqGetLatestPairInfo
	9,  // 8: globalRPCProto.globalRPC.getSwapAmount:input_type -> globalRPCProto.ReqGetSwapAmount
	11, // 9: globalRPCProto.globalRPC.getLpValue:input_type -> globalRPCProto.ReqGetLpValue
	15, // 10: globalRPCProto.globalRPC.getLatestTxsListByAccountIndex:input_type -> globalRPCProto.ReqGetLatestTxsListByAccountIndex
	17, // 11: globalRPCProto.globalRPC.getLatestTxsListByAccountIndexAndTxType:input_type -> globalRPCProto.ReqGetLatestTxsListByAccountIndexAndTxType
	19, // 12: globalRPCProto.globalRPC.sendTx:input_type -> globalRPCProto.ReqSendTx
	21, // 13: globalRPCProto.globalRPC.getTransactionCount:input_type -> globalRPCProto.ReqGetTransactionCount
	23, // 14: globalRPCProto.globalRPC.getMaxOfferId:input_type -> globalRPCProto.ReqGetMaxOfferId
	1,  // 15: globalRPCProto.globalRPC.getLatestAccountLp:output_type -> globalRPCProto.RespGetLatestAccountLp
	4,  // 16: globalRPCProto.globalRPC.getLatestAssetsListByAccountIndex:output_type -> globalRPCProto.RespGetLatestAssetsListByAccountIndex
	6,  // 17: globalRPCProto.globalRPC.getLatestAssetInfoByAccountIndexAndAssetId:output_type -> globalRPCProto.RespGetLatestAssetInfoByAccountIndexAndAssetId
	8,  // 18: globalRPCProto.globalRPC.getLatestPairInfo:output_type -> globalRPCProto.RespGetLatestPairInfo
	10, // 19: globalRPCProto.globalRPC.getSwapAmount:output_type -> globalRPCProto.RespGetSwapAmount
	12, // 20: globalRPCProto.globalRPC.getLpValue:output_type -> globalRPCProto.RespGetLpValue
	16, // 21: globalRPCProto.globalRPC.getLatestTxsListByAccountIndex:output_type -> globalRPCProto.RespGetLatestTxsListByAccountIndex
	18, // 22: globalRPCProto.globalRPC.getLatestTxsListByAccountIndexAndTxType:output_type -> globalRPCProto.RespGetLatestTxsListByAccountIndexAndTxType
	20, // 23: globalRPCProto.globalRPC.sendTx:output_type -> globalRPCProto.RespSendTx
	22, // 24: globalRPCProto.globalRPC.getTransactionCount:output_type -> globalRPCProto.RespGetTransactionCount
	24, // 25: globalRPCProto.globalRPC.getMaxOfferId:output_type -> globalRPCProto.RespGetMaxOfferId
	15, // [15:26] is the sub-list for method output_type
	4,  // [4:15] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_globalRPC_proto_init() }
func file_globalRPC_proto_init() {
	if File_globalRPC_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_globalRPC_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetLatestAccountLp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetLatestAccountLp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetLatestAssetsListByAccountIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetLatestAssetsListByAccountIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetLatestAssetInfoByAccountIndexAndAssetId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetLatestAssetInfoByAccountIndexAndAssetId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetLatestPairInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetLatestPairInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetSwapAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetSwapAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetLpValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetLpValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxDetailInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetLatestTxsListByAccountIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetLatestTxsListByAccountIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetLatestTxsListByAccountIndexAndTxType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetLatestTxsListByAccountIndexAndTxType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSendTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespSendTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetTransactionCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetTransactionCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetMaxOfferId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetMaxOfferId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_globalRPC_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_globalRPC_proto_goTypes,
		DependencyIndexes: file_globalRPC_proto_depIdxs,
		MessageInfos:      file_globalRPC_proto_msgTypes,
	}.Build()
	File_globalRPC_proto = out.File
	file_globalRPC_proto_rawDesc = nil
	file_globalRPC_proto_goTypes = nil
	file_globalRPC_proto_depIdxs = nil
}
