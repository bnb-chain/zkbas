// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	account "github.com/bnb-chain/zkbas/service/api/app/internal/handler/account"
	asset "github.com/bnb-chain/zkbas/service/api/app/internal/handler/asset"
	block "github.com/bnb-chain/zkbas/service/api/app/internal/handler/block"
	info "github.com/bnb-chain/zkbas/service/api/app/internal/handler/info"
	nft "github.com/bnb-chain/zkbas/service/api/app/internal/handler/nft"
	pair "github.com/bnb-chain/zkbas/service/api/app/internal/handler/pair"
	root "github.com/bnb-chain/zkbas/service/api/app/internal/handler/root"
	transaction "github.com/bnb-chain/zkbas/service/api/app/internal/handler/transaction"
	"github.com/bnb-chain/zkbas/service/api/app/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/",
				Handler: root.GetStatusHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/account/getAccounts",
				Handler: account.GetAccountsHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/account/getAccountStatusByPk",
				Handler: account.GetAccountStatusByPkHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/account/getAccountStatusByName",
				Handler: account.GetAccountStatusByNameHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/account/getAccountByPk",
				Handler: account.GetAccountByPkHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/account/getAccountByIndex",
				Handler: account.GetAccountByIndexHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/account/getAccountByName",
				Handler: account.GetAccountByNameHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/asset/getAssets",
				Handler: asset.GetAssetsHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/block/getBlocks",
				Handler: block.GetBlocksHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/block/getBlockByCommitment",
				Handler: block.GetBlockByCommitmentHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/block/getBlockByHeight",
				Handler: block.GetBlockByHeightHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/block/getCurrentHeight",
				Handler: block.GetCurrentHeightHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/info/getLayer2BasicInfo",
				Handler: info.GetLayer2BasicInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/info/getCurrencyPriceBySymbol",
				Handler: info.GetCurrencyPriceBySymbolHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/info/getCurrencyPrices",
				Handler: info.GetCurrencyPricesHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/info/getGasFee",
				Handler: info.GetGasFeeHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/info/getWithdrawGasFee",
				Handler: info.GetWithdrawGasFeeHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/info/getGasFeeAssets",
				Handler: info.GetGasFeeAssetsHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/info/getGasAccount",
				Handler: info.GetGasAccountHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/info/search",
				Handler: info.SearchHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/pair/getSwapAmount",
				Handler: pair.GetSwapAmountHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/pair/getPairs",
				Handler: pair.GetPairsHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/pair/getLpValue",
				Handler: pair.GetLpValueHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/pair/getPairByIndex",
				Handler: pair.GetPairByIndexHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/tx/getTxs",
				Handler: transaction.GetTxsHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/tx/getTxsByBlockHeight",
				Handler: transaction.GetTxsByBlockHeightHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/tx/getTxsByAccountIndex",
				Handler: transaction.GetTxsByAccountIndexHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/tx/getTxsByAccountName",
				Handler: transaction.GetTxsByAccountNameHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/tx/getTxsByAccountPk",
				Handler: transaction.GetTxsByAccountPkHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/tx/getTxByHash",
				Handler: transaction.GetTxByHashHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/tx/getMempoolTxs",
				Handler: transaction.GetMempoolTxsHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/tx/getmempoolTxsByAccountName",
				Handler: transaction.GetmempoolTxsByAccountNameHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/tx/getNextNonce",
				Handler: transaction.GetNextNonceHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/v1/tx/sendTx",
				Handler: transaction.SendTxHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/nft/getMaxOfferId",
				Handler: nft.GetMaxOfferIdHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/nft/getNftsByAccountIndex",
				Handler: nft.GetNftsByAccountIndexHandler(serverCtx),
			},
		},
	)
}
