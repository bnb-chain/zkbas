// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	account "github.com/bnb-chain/zkbas/service/api/explorer/internal/handler/account"
	block "github.com/bnb-chain/zkbas/service/api/explorer/internal/handler/block"
	info "github.com/bnb-chain/zkbas/service/api/explorer/internal/handler/info"
	root "github.com/bnb-chain/zkbas/service/api/explorer/internal/handler/root"
	transaction "github.com/bnb-chain/zkbas/service/api/explorer/internal/handler/transaction"
	"github.com/bnb-chain/zkbas/service/api/explorer/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/",
				Handler: root.GetStatusHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/info/getLayer2BasicInfo",
				Handler: info.GetLayer2BasicInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/info/getAssetsList",
				Handler: info.GetAssetsListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/info/search",
				Handler: info.SearchHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/info/getAccounts",
				Handler: info.GetAccountsHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/block/getBlocks",
				Handler: block.GetBlocksHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/block/getBlockByCommitment",
				Handler: block.GetBlockByCommitmentHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/block/getBlockByBlockHeight",
				Handler: block.GetBlockByBlockHeightHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/tx/getTxsListByBlockHeight",
				Handler: transaction.GetTxsListByBlockHeightHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/tx/getTxByHash",
				Handler: transaction.GetTxByHashHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/tx/getTxsListByAccountIndex",
				Handler: transaction.GetTxsListByAccountIndexHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/tx/getMempoolTxsList",
				Handler: transaction.GetMempoolTxsListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/tx/getMempoolTxsListByPublicKey",
				Handler: transaction.GetMempoolTxsListByPublicKeyHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/account/getAccountInfoByAccountName",
				Handler: account.GetAccountInfoByAccountNameHandler(serverCtx),
			},
		},
	)
}
